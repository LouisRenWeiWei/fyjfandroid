apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.antfortune.freeline'
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion LIBRARY_COMPILE_SDK_VERSION
    buildToolsVersion LIBRARY_BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.fyjf.all"
        minSdkVersion LIBRARY_MIN_SDK_VERSION
        targetSdkVersion LIBRARY_TARGET_SDK_VERSION
        multiDexEnabled true
        manifestPlaceholders = [CHANNEL_VALUE: "fyjf"]

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64' , 'armeabi-v8a'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "57f2a74ca90632ee104e941e", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }


    signingConfigs {
        mycofig {
            storeFile file('../keystore.jks')
            storePassword "fyjf20170724"
            keyAlias "fyjf"
            keyPassword "fyjf20170724"
            v2SigningEnabled true
        }
    }


    compileOptions {
        sourceCompatibility org.gradle.api.JavaVersion.VERSION_1_7
        targetCompatibility org.gradle.api.JavaVersion.VERSION_1_7
    }


    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.mycofig
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.mycofig
        }
    }

    productFlavors {
        fyjf {
            manifestPlaceholders = [CHANNEL_VALUE: 'fyjf', CHANNEL_ID: 10000]
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                File outputDirectory = new File(outputFile.parent);
                def fileName
                if (variant.buildType.name == "release") {
                    fileName = "富源金服_${variant.productFlavors[0].name}_v${versionName}_${versionCode}.apk"
                } else {
                    fileName = "富源金服_${variant.productFlavors[0].name}_v${versionName}_${versionCode}_beta.apk"
                }
                output.outputFile = new File(outputDirectory, fileName)
            }
        }
    }

    packagingOptions {
        //exclude 'META-INF/LICENSE'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        abortOnError false
    }

    freeline {
        hack true
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':vo')
    compile project(':blservice')
    compile project(':utils')
    compile project(':widget')
    compile project(':vo')
    compile project(':blservice')
    compile project(':widget')
    //annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'  这个有问题
    // 此处以JPush 3.0.3 版本为例。
    // 此处以JCore 1.1.1 版本为例。
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.jakewharton:butterknife:8.6.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'cn.jiguang.sdk:jpush:3.0.3'
    compile 'cn.jiguang.sdk:jcore:1.1.1'
    testCompile 'com.antfortune.freeline:runtime-no-op:0.8.7'
    apt 'com.jakewharton:butterknife-compiler:8.6.0'
    debugCompile 'com.antfortune.freeline:runtime:0.8.7'
    releaseCompile 'com.antfortune.freeline:runtime-no-op:0.8.7'
    compile 'com.jaredrummler:material-spinner:1.1.0'

    compile project(path: ':dialog')
}
